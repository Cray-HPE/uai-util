@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "cray-uai-util"
        DESCRIPTION = "Cray User Access Instance Supporting tools"
        IS_STABLE = getBuildIsStable()
        BUILD_METADATA = getRpmRevision(isStable: env.IS_STABLE)
    }

    stages {
        stage("Build") {
            steps {
                sh "make rpm"
            }
        }
        stage("Test") {
            steps {
                sh "make run_unit_test"
            }
        }

        stage('Publish') {
            steps {
                script {
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/noarch/*.rpm", arch: "noarch", os: "noos", isStable: env.IS_STABLE)
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", arch: "src", os: "noos", isStable: env.IS_STABLE)
                }
            }
        }
    }
}
